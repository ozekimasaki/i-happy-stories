# Product Requirements Document: ものがたりWeavers

## 1. 概要

本プロジェクトは、ユーザーが入力した「出来事」を基に、AI（Google Gemini）が自動で物語とそれに付随するイラストを生成するWebアプリケーション「ものがたりWeavers」を開発するものです。

## 2. 目的

- ユーザーに手軽な物語作成体験を提供する。
- AIによるテキスト・画像生成技術を活用した新しいエンターテイメントを創出する。
- Hono, Vite, React, Supabase, Cloudflareといったモダンな技術スタックを用いた開発実践。

## 3. 主要な機能要件

### 3.1. プロジェクト基盤と開発環境
- Hono (cloudflare-workers テンプレート) を使用してプロジェクトを初期化する。
- Vite を統合し、単一コマンドでバックエンドとフロントエンドの同時開発を可能にする。
- Supabase と Google Gemini の API キーを管理するため、`.dev.vars` と Wrangler Secrets を用いた環境変数管理を導入する。

### 3.2. バックエンドAPI (Hono)
- `/api/*` のベースパスでAPIルーティングを構築する。
- API以外のリクエストは、ReactでビルドされたSPAを配信する。
- Supabase と連携し、ユーザー認証（サインアップ、ログイン）機能を提供する。
- 保護されたAPIエンドポイントを作成するための認証ミドルウェアを実装する。

### 3.3. フロントエンドUI (React)
- ユーザーが「出来事」を入力するためのフォーム画面を実装する。
- 生成された「物語」と「イラスト」を閲覧するための表示画面を実装する。
- ログイン・サインアップページを実装し、クライアントサイドでの認証状態管理を行う。

### 3.4. 物語生成機能
- フロントエンドからのリクエストを受け取り、物語を生成するAPIエンドポイント (`POST /api/stories`) を作成する。
- Google Gemini API を利用し、ユーザー入力と定義済みプロンプト (`ai_prompt_instruction.md`) を基に物語テキストを生成する。
- 生成された物語を、ユーザー情報と紐付けてSupabaseデータベースに保存する。

### 3.5. イラスト生成機能
- 生成された物語テキストを基に、イラスト生成用のプロンプトを組み立てるロジックを実装する。
- Gemini API のマルチモーダル機能を活用し、イラストを生成する。
- **【最重要R&D】** 複数ページ間でキャラクターデザインの一貫性を保つための技術を検証・実装する。
- 生成されたイラスト（またはそのURL）をSupabaseデータベースに保存する。

### 3.6. デプロイと運用
- Cloudflare Pages/Workers へのデプロイ設定を `wrangler.toml` に記述する。
- GitHubリポジトリと連携し、`main` ブランチへのプッシュをトリガーとしたCI/CDパイプラインを構築する。
